'-----------------------------------------------------------------------------------------------------------------------
' An Input Manager system for QB64-PE
' Copyright (c) 2025 Samuel Gomes
'-----------------------------------------------------------------------------------------------------------------------

$INCLUDEONCE

$LET TOOLBOX64_STRICT = TRUE

'$INCLUDE:'../Common.bi'
'$INCLUDE:'../Math/Math.bi'
'$INCLUDE:'../Math/Vector2i.bi'
'$INCLUDE:'../Math/Bounds2i.bi'
'$INCLUDE:'../StringOps.bi'

CONST KEY_SPACE& = _ASC_SPACE
CONST KEY_EXCLAMATION& = _ASC_EXCLAMATION
CONST KEY_QUOTE& = _ASC_QUOTE
CONST KEY_HASH& = _ASC_HASH
CONST KEY_DOLLAR& = _ASC_DOLLAR
CONST KEY_PERCENT& = _ASC_PERCENT
CONST KEY_AMPERSAND& = _ASC_AMPERSAND
CONST KEY_APOSTROPHE& = _ASC_APOSTROPHE
CONST KEY_LEFTBRACKET& = _ASC_LEFTBRACKET
CONST KEY_RIGHTBRACKET& = _ASC_RIGHTBRACKET
CONST KEY_ASTERISK& = _ASC_ASTERISK
CONST KEY_PLUS& = _ASC_PLUS
CONST KEY_COMMA& = _ASC_COMMA
CONST KEY_MINUS& = _ASC_MINUS
CONST KEY_FULLSTOP& = _ASC_FULLSTOP
CONST KEY_FORWARDSLASH& = _ASC_FORWARDSLASH
CONST KEY_0& = ASC_0
CONST KEY_1& = ASC_1
CONST KEY_2& = ASC_2
CONST KEY_3& = ASC_3
CONST KEY_4& = ASC_4
CONST KEY_5& = ASC_5
CONST KEY_6& = ASC_6
CONST KEY_7& = ASC_7
CONST KEY_8& = ASC_8
CONST KEY_9& = ASC_9
CONST KEY_COLON& = _ASC_COLON
CONST KEY_SEMICOLON& = _ASC_SEMICOLON
CONST KEY_LESSTHAN& = _ASC_LESSTHAN
CONST KEY_EQUAL& = _ASC_EQUAL
CONST KEY_GREATERTHAN& = _ASC_GREATERTHAN
CONST KEY_QUESTION& = _ASC_QUESTION
CONST KEY_ATSIGN& = _ASC_ATSIGN
CONST KEY_UPPER_A& = ASC_UPPER_A
CONST KEY_UPPER_B& = ASC_UPPER_B
CONST KEY_UPPER_C& = ASC_UPPER_C
CONST KEY_UPPER_D& = ASC_UPPER_D
CONST KEY_UPPER_E& = ASC_UPPER_E
CONST KEY_UPPER_F& = ASC_UPPER_F
CONST KEY_UPPER_G& = ASC_UPPER_G
CONST KEY_UPPER_H& = ASC_UPPER_H
CONST KEY_UPPER_I& = ASC_UPPER_I
CONST KEY_UPPER_J& = ASC_UPPER_J
CONST KEY_UPPER_K& = ASC_UPPER_K
CONST KEY_UPPER_L& = ASC_UPPER_L
CONST KEY_UPPER_M& = ASC_UPPER_M
CONST KEY_UPPER_N& = ASC_UPPER_N
CONST KEY_UPPER_O& = ASC_UPPER_O
CONST KEY_UPPER_P& = ASC_UPPER_P
CONST KEY_UPPER_Q& = ASC_UPPER_Q
CONST KEY_UPPER_R& = ASC_UPPER_R
CONST KEY_UPPER_S& = ASC_UPPER_S
CONST KEY_UPPER_T& = ASC_UPPER_T
CONST KEY_UPPER_U& = ASC_UPPER_U
CONST KEY_UPPER_V& = ASC_UPPER_V
CONST KEY_UPPER_W& = ASC_UPPER_W
CONST KEY_UPPER_X& = ASC_UPPER_X
CONST KEY_UPPER_Y& = ASC_UPPER_Y
CONST KEY_UPPER_Z& = ASC_UPPER_Z
CONST KEY_LEFTSQUAREBRACKET& = _ASC_LEFTSQUAREBRACKET
CONST KEY_BACKSLASH& = _ASC_BACKSLASH
CONST KEY_RIGHTSQUAREBRACKET& = _ASC_RIGHTSQUAREBRACKET
CONST KEY_CARET& = _ASC_CARET
CONST KEY_UNDERSCORE& = _ASC_UNDERSCORE
CONST KEY_GRAVE& = _ASC_GRAVE
CONST KEY_LOWER_A& = ASC_LOWER_A
CONST KEY_LOWER_B& = ASC_LOWER_B
CONST KEY_LOWER_C& = ASC_LOWER_C
CONST KEY_LOWER_D& = ASC_LOWER_D
CONST KEY_LOWER_E& = ASC_LOWER_E
CONST KEY_LOWER_F& = ASC_LOWER_F
CONST KEY_LOWER_G& = ASC_LOWER_G
CONST KEY_LOWER_H& = ASC_LOWER_H
CONST KEY_LOWER_I& = ASC_LOWER_I
CONST KEY_LOWER_J& = ASC_LOWER_J
CONST KEY_LOWER_K& = ASC_LOWER_K
CONST KEY_LOWER_L& = ASC_LOWER_L
CONST KEY_LOWER_M& = ASC_LOWER_M
CONST KEY_LOWER_N& = ASC_LOWER_N
CONST KEY_LOWER_O& = ASC_LOWER_O
CONST KEY_LOWER_P& = ASC_LOWER_P
CONST KEY_LOWER_Q& = ASC_LOWER_Q
CONST KEY_LOWER_R& = ASC_LOWER_R
CONST KEY_LOWER_S& = ASC_LOWER_S
CONST KEY_LOWER_T& = ASC_LOWER_T
CONST KEY_LOWER_U& = ASC_LOWER_U
CONST KEY_LOWER_V& = ASC_LOWER_V
CONST KEY_LOWER_W& = ASC_LOWER_W
CONST KEY_LOWER_X& = ASC_LOWER_X
CONST KEY_LOWER_Y& = ASC_LOWER_Y
CONST KEY_LOWER_Z& = ASC_LOWER_Z
CONST KEY_LEFTCURLYBRACKET& = _ASC_LEFTCURLYBRACKET
CONST KEY_VERTICALBAR& = _ASC_VERTICALBAR
CONST KEY_RIGHTCURLYBRACKET& = _ASC_RIGHTCURLYBRACKET
CONST KEY_TILDE& = _ASC_TILDE

TYPE __InputManager_MouseEvent
    position AS Vector2i
    leftButtonDown AS _BYTE
    rightButtonDown AS _BYTE
    centerButtonDown AS _BYTE
    scrollWheelValue AS LONG
    leftButtonClicked AS _BYTE
    leftButtonClickedBounds AS Bounds2i
    rightButtonClicked AS _BYTE
    rightButtonClickedBounds AS Bounds2i
    centerButtonClicked AS _BYTE
    centerButtonClickedBounds AS Bounds2i
END TYPE

TYPE __InputManager_WindowEvent
    shouldClose AS _BYTE
    resized AS _BYTE
    size AS Vector2i
END TYPE

TYPE __InputManager_GamepadEvent
    axis1 AS SINGLE
    asix2 AS SINGLE
    axis3 AS SINGLE
    axis4 AS SINGLE
    button1WasDown AS _BYTE
    button1Down AS _BYTE
    button2WasDown AS _BYTE
    button2Down AS _BYTE
    button3WasDown AS _BYTE
    button3Down AS _BYTE
    button4WasDown AS _BYTE
    button4Down AS _BYTE
END TYPE

TYPE __InputManager
    kbdKeyCode AS LONG
    isMouseEvent AS _BYTE
    mse AS __InputManager_MouseEvent
    isWindowEvent AS _BYTE
    win AS __InputManager_WindowEvent
    isGamepad1Event AS _BYTE
    gp1 AS __InputManager_GamepadEvent
    isGamepad2Event AS _BYTE
    gp2 AS __InputManager_GamepadEvent
END TYPE

DIM __InputManager AS __InputManager
